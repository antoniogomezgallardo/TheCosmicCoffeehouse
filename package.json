{
  "name": "the-cosmic-coffeehouse",
  "version": "1.0.0",
  "description": "Senior QA Engineer Interview Preparation - E-Commerce Testing Demonstration",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "stop": "node scripts/stop-servers.js",
    "stop:servers": "node scripts/stop-servers.js",
    "stop:docker": "docker stop cosmic-mongo 2>nul || echo 'MongoDB container not running'",
    "start:mongo": "docker run -d --name cosmic-mongo -p 27017:27017 mongo:latest 2>nul || docker start cosmic-mongo",
    "restart": "npm run stop && npm run start:mongo && timeout /t 3 && npm run dev",
    "start:all": "scripts/start-servers.bat",
    "stop:all": "scripts/stop-servers.bat",
    "stop:safe": "node scripts/stop-servers.js",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "npm run test:unit:frontend && npm run test:unit:backend",
    "test:unit:frontend": "cd frontend && npm test",
    "test:unit:backend": "cd backend && npm test",
    "test:integration": "cd backend && npm run test:integration",
    "test:e2e": "cd qa-automation/playwright && npm test",
    "test:api": "cd qa-automation/api-tests && npm test",
    "test:performance": "cd qa-automation/performance && npm test",
    "test:security": "cd qa-automation/security && npm test",
    "coverage": "npm run coverage:frontend && npm run coverage:backend",
    "coverage:frontend": "cd frontend && npm run coverage",
    "coverage:backend": "cd backend && npm run coverage",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && npm run type-check",
    "audit": "npm audit && cd frontend && npm audit && cd ../backend && npm audit",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "ci": "npm run lint && npm run type-check && npm run test && npm run build",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ../qa-automation/playwright && npm install && cd ../api-tests && npm install && cd ../performance && npm install"
  },
  "keywords": [
    "qa",
    "testing",
    "automation",
    "e-commerce",
    "interview",
    "playwright",
    "jest",
    "typescript",
    "react",
    "express",
    "mongodb"
  ],
  "author": "Antonio Gomez Gallardo",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}